@using PatchHub.Infrastructure.Contracts.Responses
@using PatchHub.Infrastructure.Models
@using PatchHub.Infrastructure.Services

<MudGrid Spacing="4">
    @if (_newsItems != null) 
    {
        foreach(var newsItem in _newsItems) 
        {
            <MudItem xs="12">
                <PatchNoteComponent newsItem="@newsItem" SteamApp="@SteamApp" />
            </MudItem>
        }
    }
    @*Loading can be added here*@
</MudGrid>

@code {
    [Inject]
    protected SteamApiService SteamApi { get; set; }

    [Parameter]
    public SteamAppResponse SteamApp { get; set; }

    private IEnumerable<NewsItem>? _newsItems;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        _newsItems = null;
    }

    protected override async Task OnParametersSetAsync()
    {
        base.OnParametersSet();
        _newsItems = await SteamApi.GetNewsForAppAsync(SteamApp);
        StateHasChanged();
    }
}
